/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.9.1 on Wed Feb 17 09:47:39 2010
 *
 * Copyright (c) 2009 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIphonon.h"

#line 38 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 45 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 38 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 45 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 38 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 45 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 38 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 44 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 51 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 38 "sip/phonon/effect.sip"
#include <effect.h>
#line 45 "sip/phonon/effect.sip"
#include <effect.h>
#line 44 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 51 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 38 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 45 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 44 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 51 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 38 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 45 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 38 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 45 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 38 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 45 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 38 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 49 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 88 "sip/phonon/objectdescription.sip"
#include <objectdescriptionmodel.h>
#line 38 "sip/phonon/path.sip"
#include <path.h>
#line 45 "sip/phonon/path.sip"
#include <path.h>
#line 38 "sip/phonon/phononnamespace.sip"
#include <phononnamespace.h>
#line 38 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 45 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 38 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 45 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 38 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 45 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 38 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 45 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 111 "sipphononPhonon.cpp"

#line 38 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 45 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 38 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 45 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 38 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 45 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 38 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 44 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 51 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 38 "sip/phonon/effect.sip"
#include <effect.h>
#line 45 "sip/phonon/effect.sip"
#include <effect.h>
#line 44 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 51 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 38 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 45 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 44 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 51 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 38 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 45 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 38 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 45 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 38 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 45 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 38 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 49 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 88 "sip/phonon/objectdescription.sip"
#include <objectdescriptionmodel.h>
#line 38 "sip/phonon/path.sip"
#include <path.h>
#line 45 "sip/phonon/path.sip"
#include <path.h>
#line 38 "sip/phonon/phononnamespace.sip"
#include <phononnamespace.h>
#line 38 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 45 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 38 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 45 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 38 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 45 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 38 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 45 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 187 "sipphononPhonon.cpp"
#line 38 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 45 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 38 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 45 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 38 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 45 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 38 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 44 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 51 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 38 "sip/phonon/effect.sip"
#include <effect.h>
#line 45 "sip/phonon/effect.sip"
#include <effect.h>
#line 44 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 51 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 38 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 45 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 44 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 51 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 38 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 45 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 38 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 45 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 38 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 45 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 38 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 49 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 88 "sip/phonon/objectdescription.sip"
#include <objectdescriptionmodel.h>
#line 38 "sip/phonon/path.sip"
#include <path.h>
#line 45 "sip/phonon/path.sip"
#include <path.h>
#line 38 "sip/phonon/phononnamespace.sip"
#include <phononnamespace.h>
#line 38 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 45 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 38 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 45 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 38 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 45 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 38 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 45 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 262 "sipphononPhonon.cpp"
#line 38 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 45 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 38 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 45 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 38 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 45 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 38 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 44 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 51 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 38 "sip/phonon/effect.sip"
#include <effect.h>
#line 45 "sip/phonon/effect.sip"
#include <effect.h>
#line 44 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 51 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 38 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 45 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 44 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 51 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 38 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 45 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 38 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 45 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 38 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 45 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 38 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 49 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 88 "sip/phonon/objectdescription.sip"
#include <objectdescriptionmodel.h>
#line 38 "sip/phonon/path.sip"
#include <path.h>
#line 45 "sip/phonon/path.sip"
#include <path.h>
#line 38 "sip/phonon/phononnamespace.sip"
#include <phononnamespace.h>
#line 38 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 45 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 38 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 45 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 38 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 45 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 38 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 45 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 337 "sipphononPhonon.cpp"
#line 38 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 45 "sip/phonon/abstractaudiooutput.sip"
#include <abstractaudiooutput.h>
#line 38 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 45 "sip/phonon/abstractvideooutput.sip"
#include <abstractvideooutput.h>
#line 38 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 45 "sip/phonon/audiooutput.sip"
#include <audiooutput.h>
#line 38 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 44 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 51 "sip/phonon/backendcapabilities.sip"
#include <backendcapabilities.h>
#line 38 "sip/phonon/effect.sip"
#include <effect.h>
#line 45 "sip/phonon/effect.sip"
#include <effect.h>
#line 44 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 51 "sip/phonon/effectparameter.sip"
#include <effectparameter.h>
#line 38 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 45 "sip/phonon/effectwidget.sip"
#include <effectwidget.h>
#line 44 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 51 "sip/phonon/mediacontroller.sip"
#include <mediacontroller.h>
#line 38 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 45 "sip/phonon/medianode.sip"
#include <medianode.h>
#line 38 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 45 "sip/phonon/mediaobject.sip"
#include <mediaobject.h>
#line 38 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 45 "sip/phonon/mediasource.sip"
#include <mediasource.h>
#line 38 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 49 "sip/phonon/objectdescription.sip"
#include <objectdescription.h>
#line 88 "sip/phonon/objectdescription.sip"
#include <objectdescriptionmodel.h>
#line 38 "sip/phonon/path.sip"
#include <path.h>
#line 45 "sip/phonon/path.sip"
#include <path.h>
#line 38 "sip/phonon/phononnamespace.sip"
#include <phononnamespace.h>
#line 38 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 45 "sip/phonon/seekslider.sip"
#include <seekslider.h>
#line 38 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 45 "sip/phonon/videoplayer.sip"
#include <videoplayer.h>
#line 38 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 45 "sip/phonon/videowidget.sip"
#include <videowidget.h>
#line 38 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 45 "sip/phonon/volumeslider.sip"
#include <volumeslider.h>
#line 412 "sipphononPhonon.cpp"
#line 41 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 415 "sipphononPhonon.cpp"


extern "C" {static PyObject *meth_Phonon_phononVersion(PyObject *, PyObject *);}
static PyObject *meth_Phonon_phononVersion(PyObject *, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        if (sipParseArgs(&sipArgsParsed,sipArgs,""))
        {
            const char *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = Phonon::phononVersion();
            Py_END_ALLOW_THREADS

            if (sipRes == NULL)
            {
                Py_INCREF(Py_None);
                return Py_None;
            }

            return SIPBytes_FromString(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipArgsParsed,sipName_phononVersion);

    return NULL;
}


extern "C" {static PyObject *meth_Phonon_categoryToString(PyObject *, PyObject *);}
static PyObject *meth_Phonon_categoryToString(PyObject *, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        Phonon::Category a0;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"E",sipType_Phonon_Category,&a0))
        {
            QString *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(Phonon::categoryToString(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipArgsParsed,sipName_categoryToString);

    return NULL;
}


extern "C" {static PyObject *meth_Phonon_createPath(PyObject *, PyObject *);}
static PyObject *meth_Phonon_createPath(PyObject *, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        Phonon::MediaNode * a0;
        Phonon::MediaNode * a1;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"J8J8",sipType_Phonon_MediaNode,&a0,sipType_Phonon_MediaNode,&a1))
        {
            Phonon::Path *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Phonon::Path(Phonon::createPath(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Phonon_Path,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipArgsParsed,sipName_createPath);

    return NULL;
}


extern "C" {static PyObject *meth_Phonon_createPlayer(PyObject *, PyObject *);}
static PyObject *meth_Phonon_createPlayer(PyObject *, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        Phonon::Category a0;
        const Phonon::MediaSource& a1def = Phonon::MediaSource();
        const Phonon::MediaSource * a1 = &a1def;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"E|J9",sipType_Phonon_Category,&a0,sipType_Phonon_MediaSource,&a1))
        {
            Phonon::MediaObject *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = Phonon::createPlayer(a0,*a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Phonon_MediaObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipArgsParsed,sipName_createPlayer);

    return NULL;
}


static PyMethodDef methods_Phonon[] = {
    {SIP_MLNAME_CAST(sipName_categoryToString), meth_Phonon_categoryToString, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_createPath), meth_Phonon_createPath, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_createPlayer), meth_Phonon_createPlayer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_phononVersion), meth_Phonon_phononVersion, METH_VARARGS, NULL}
};

static sipEnumMemberDef enummembers_Phonon[] = {
    {sipName_AccessibilityCategory, Phonon::AccessibilityCategory, 10},
    {sipName_AlbumMetaData, Phonon::AlbumMetaData, 27},
    {sipName_ArtistMetaData, Phonon::ArtistMetaData, 27},
    {sipName_BufferingState, Phonon::BufferingState, 30},
    {sipName_Cd, Phonon::Cd, 11},
    {sipName_CommunicationCategory, Phonon::CommunicationCategory, 10},
    {sipName_DateMetaData, Phonon::DateMetaData, 27},
    {sipName_DescriptionMetaData, Phonon::DescriptionMetaData, 27},
    {sipName_Dvd, Phonon::Dvd, 11},
    {sipName_ErrorState, Phonon::ErrorState, 30},
    {sipName_FatalError, Phonon::FatalError, 19},
    {sipName_GameCategory, Phonon::GameCategory, 10},
    {sipName_GenreMetaData, Phonon::GenreMetaData, 27},
    {sipName_LoadingState, Phonon::LoadingState, 30},
    {sipName_MusicBrainzDiscIdMetaData, Phonon::MusicBrainzDiscIdMetaData, 27},
    {sipName_MusicCategory, Phonon::MusicCategory, 10},
    {sipName_NoCategory, Phonon::NoCategory, 10},
    {sipName_NoDisc, Phonon::NoDisc, 11},
    {sipName_NoError, Phonon::NoError, 19},
    {sipName_NormalError, Phonon::NormalError, 19},
    {sipName_NotificationCategory, Phonon::NotificationCategory, 10},
    {sipName_PausedState, Phonon::PausedState, 30},
    {sipName_PlayingState, Phonon::PlayingState, 30},
    {sipName_StoppedState, Phonon::StoppedState, 30},
    {sipName_TitleMetaData, Phonon::TitleMetaData, 27},
    {sipName_TracknumberMetaData, Phonon::TracknumberMetaData, 27},
    {sipName_Vcd, Phonon::Vcd, 11},
    {sipName_VideoCategory, Phonon::VideoCategory, 10},
};


pyqt4ClassTypeDef sipTypeDef_phonon_Phonon = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_NAMESPACE,
        sipNameNr_Phonon,
        {0}
    },
    {
        sipNameNr_Phonon,
        {0, 0, 1},
        4, methods_Phonon,
        28, enummembers_Phonon,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    -1,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0
};
