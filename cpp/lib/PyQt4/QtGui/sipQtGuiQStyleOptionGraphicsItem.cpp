/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.9.1 on Wed Feb 17 09:47:23 2010
 *
 * Copyright (c) 2009 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 1597 "sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 39 "sipQtGuiQStyleOptionGraphicsItem.cpp"

#line 160 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 43 "sipQtGuiQStyleOptionGraphicsItem.cpp"
#line 41 "sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 46 "sipQtGuiQStyleOptionGraphicsItem.cpp"
#line 41 "sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 49 "sipQtGuiQStyleOptionGraphicsItem.cpp"


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QStyleOptionGraphicsItem(void *, const sipTypeDef *);}
static void *cast_QStyleOptionGraphicsItem(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QStyleOptionGraphicsItem)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QStyleOption)->ctd_cast((QStyleOption *)(QStyleOptionGraphicsItem *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QStyleOptionGraphicsItem(void *, int);}
static void release_QStyleOptionGraphicsItem(void *sipCppV,int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast<QStyleOptionGraphicsItem *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void assign_QStyleOptionGraphicsItem(void *, SIP_SSIZE_T, const void *);}
static void assign_QStyleOptionGraphicsItem(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QStyleOptionGraphicsItem *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QStyleOptionGraphicsItem *>(sipSrc);
}


extern "C" {static void *array_QStyleOptionGraphicsItem(SIP_SSIZE_T);}
static void *array_QStyleOptionGraphicsItem(SIP_SSIZE_T sipNrElem)
{
    return new QStyleOptionGraphicsItem[sipNrElem];
}


extern "C" {static void *copy_QStyleOptionGraphicsItem(const void *, SIP_SSIZE_T);}
static void *copy_QStyleOptionGraphicsItem(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QStyleOptionGraphicsItem(reinterpret_cast<const QStyleOptionGraphicsItem *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QStyleOptionGraphicsItem(sipSimpleWrapper *);}
static void dealloc_QStyleOptionGraphicsItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QStyleOptionGraphicsItem(sipSelf->u.cppPtr,0);
    }
}


extern "C" {static void *init_QStyleOptionGraphicsItem(sipSimpleWrapper *, PyObject *, PyObject **, int *);}
static void *init_QStyleOptionGraphicsItem(sipSimpleWrapper *, PyObject *sipArgs, PyObject **, int *sipArgsParsed)
{
    QStyleOptionGraphicsItem *sipCpp = 0;

    if (!sipCpp)
    {
        if (sipParseArgs(sipArgsParsed,sipArgs,""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QStyleOptionGraphicsItem();
            Py_END_ALLOW_THREADS
        }
    }

    if (!sipCpp)
    {
        const QStyleOptionGraphicsItem * a0;

        if (sipParseArgs(sipArgsParsed,sipArgs,"J9",sipType_QStyleOptionGraphicsItem,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QStyleOptionGraphicsItem(*a0);
            Py_END_ALLOW_THREADS
        }
    }

    return sipCpp;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QStyleOptionGraphicsItem[] = {{440, 255, 1}};

static sipEnumMemberDef enummembers_QStyleOptionGraphicsItem[] = {
    {sipName_Type, QStyleOptionGraphicsItem::Type, 473},
    {sipName_Version, QStyleOptionGraphicsItem::Version, 474},
};


extern "C" {static PyObject *varget_QStyleOptionGraphicsItem_exposedRect(void *, PyObject *);}
static PyObject *varget_QStyleOptionGraphicsItem_exposedRect(void *sipSelf, PyObject *)
{
    QRectF *sipVal;
    QStyleOptionGraphicsItem *sipCpp = reinterpret_cast<QStyleOptionGraphicsItem *>(sipSelf);

    sipVal = &sipCpp->exposedRect;

    return sipConvertFromType(sipVal,sipType_QRectF, NULL);
}


extern "C" {static int varset_QStyleOptionGraphicsItem_exposedRect(void *, PyObject *, PyObject *);}
static int varset_QStyleOptionGraphicsItem_exposedRect(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QRectF *sipVal;
    QStyleOptionGraphicsItem *sipCpp = reinterpret_cast<QStyleOptionGraphicsItem *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast<QRectF *>(sipForceConvertToType(sipPy,sipType_QRectF,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->exposedRect = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QStyleOptionGraphicsItem_levelOfDetail(void *, PyObject *);}
static PyObject *varget_QStyleOptionGraphicsItem_levelOfDetail(void *sipSelf, PyObject *)
{
    qreal sipVal;
    QStyleOptionGraphicsItem *sipCpp = reinterpret_cast<QStyleOptionGraphicsItem *>(sipSelf);

    sipVal = sipCpp->levelOfDetail;

    return PyFloat_FromDouble(sipVal);
}


extern "C" {static int varset_QStyleOptionGraphicsItem_levelOfDetail(void *, PyObject *, PyObject *);}
static int varset_QStyleOptionGraphicsItem_levelOfDetail(void *sipSelf, PyObject *sipPy, PyObject *)
{
    qreal sipVal;
    QStyleOptionGraphicsItem *sipCpp = reinterpret_cast<QStyleOptionGraphicsItem *>(sipSelf);

    sipVal = PyFloat_AsDouble(sipPy);

    if (PyErr_Occurred() != NULL)
        return -1;

    sipCpp->levelOfDetail = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QStyleOptionGraphicsItem_matrix(void *, PyObject *);}
static PyObject *varget_QStyleOptionGraphicsItem_matrix(void *sipSelf, PyObject *)
{
    QMatrix *sipVal;
    QStyleOptionGraphicsItem *sipCpp = reinterpret_cast<QStyleOptionGraphicsItem *>(sipSelf);

    sipVal = &sipCpp->matrix;

    return sipConvertFromType(sipVal,sipType_QMatrix, NULL);
}


extern "C" {static int varset_QStyleOptionGraphicsItem_matrix(void *, PyObject *, PyObject *);}
static int varset_QStyleOptionGraphicsItem_matrix(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QMatrix *sipVal;
    QStyleOptionGraphicsItem *sipCpp = reinterpret_cast<QStyleOptionGraphicsItem *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast<QMatrix *>(sipForceConvertToType(sipPy,sipType_QMatrix,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->matrix = *sipVal;

    return 0;
}

sipVariableDef variables_QStyleOptionGraphicsItem[] = {
    {sipName_exposedRect, varget_QStyleOptionGraphicsItem_exposedRect, varset_QStyleOptionGraphicsItem_exposedRect, 0},
    {sipName_levelOfDetail, varget_QStyleOptionGraphicsItem_levelOfDetail, varset_QStyleOptionGraphicsItem_levelOfDetail, 0},
    {sipName_matrix, varget_QStyleOptionGraphicsItem_matrix, varset_QStyleOptionGraphicsItem_matrix, 0},
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QStyleOptionGraphicsItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_QStyleOptionGraphicsItem,
        {0}
    },
    {
        sipNameNr_QStyleOptionGraphicsItem,
        {0, 0, 1},
        0, 0,
        2, enummembers_QStyleOptionGraphicsItem,
        3, variables_QStyleOptionGraphicsItem,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    -1,
    -1,
    supers_QStyleOptionGraphicsItem,
    0,
    init_QStyleOptionGraphicsItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QStyleOptionGraphicsItem,
    assign_QStyleOptionGraphicsItem,
    array_QStyleOptionGraphicsItem,
    copy_QStyleOptionGraphicsItem,
    release_QStyleOptionGraphicsItem,
    cast_QStyleOptionGraphicsItem,
    0,
    0,
    0
},
    0,
    0,
    0
};
