/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.9.1 on Wed Feb 17 09:47:24 2010
 *
 * Copyright (c) 2009 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 45 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 39 "sipQtGuiQGraphicsItem.cpp"

#line 45 "sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 43 "sipQtGuiQGraphicsItem.cpp"
#line 160 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 46 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 57 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 51 "sipQtGuiQGraphicsItem.cpp"
#line 45 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 54 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 57 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 60 "sipQtGuiQGraphicsItem.cpp"
#line 125 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 63 "sipQtGuiQGraphicsItem.cpp"
#line 39 "sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 66 "sipQtGuiQGraphicsItem.cpp"
#line 139 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 69 "sipQtGuiQGraphicsItem.cpp"
#line 37 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 72 "sipQtGuiQGraphicsItem.cpp"
#line 112 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 75 "sipQtGuiQGraphicsItem.cpp"
#line 291 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 78 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 81 "sipQtGuiQGraphicsItem.cpp"
#line 40 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 84 "sipQtGuiQGraphicsItem.cpp"
#line 461 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 477 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 89 "sipQtGuiQGraphicsItem.cpp"
#line 190 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 92 "sipQtGuiQGraphicsItem.cpp"
#line 320 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 95 "sipQtGuiQGraphicsItem.cpp"
#line 237 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 98 "sipQtGuiQGraphicsItem.cpp"
#line 163 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 101 "sipQtGuiQGraphicsItem.cpp"
#line 94 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 104 "sipQtGuiQGraphicsItem.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 107 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 110 "sipQtGuiQGraphicsItem.cpp"
#line 1597 "sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 113 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 116 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 119 "sipQtGuiQGraphicsItem.cpp"
#line 40 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 122 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 125 "sipQtGuiQGraphicsItem.cpp"
#line 41 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 128 "sipQtGuiQGraphicsItem.cpp"
#line 45 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 131 "sipQtGuiQGraphicsItem.cpp"
#line 859 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 134 "sipQtGuiQGraphicsItem.cpp"


class sipQGraphicsItem : public QGraphicsItem
{
public:
    sipQGraphicsItem(QGraphicsItem *,QGraphicsScene *);
    virtual ~sipQGraphicsItem();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtectVirt_contextMenuEvent(bool,QGraphicsSceneContextMenuEvent *);
    void sipProtectVirt_dragEnterEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragLeaveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragMoveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dropEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_focusInEvent(bool,QFocusEvent *);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent *);
    void sipProtectVirt_hoverEnterEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_hoverLeaveEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_hoverMoveEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent *);
    QVariant sipProtectVirt_inputMethodQuery(bool,Qt::InputMethodQuery) const;
    QVariant sipProtectVirt_itemChange(bool,QGraphicsItem::GraphicsItemChange,const QVariant&);
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent *);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent *);
    void sipProtectVirt_mouseDoubleClickEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseMoveEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mousePressEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseReleaseEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtect_prepareGeometryChange();
    bool sipProtectVirt_sceneEvent(bool,QEvent *);
    bool sipProtectVirt_sceneEventFilter(bool,QGraphicsItem *,QEvent *);
    void sipProtectVirt_wheelEvent(bool,QGraphicsSceneWheelEvent *);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void advance(int);
    QRectF boundingRect() const;
    QPainterPath shape() const;
    bool contains(const QPointF&) const;
    bool collidesWithItem(const QGraphicsItem *,Qt::ItemSelectionMode) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool isObscuredBy(const QGraphicsItem *) const;
    QPainterPath opaqueArea() const;
    void paint(QPainter *,const QStyleOptionGraphicsItem *,QWidget *);
    int type() const;
    void contextMenuEvent(QGraphicsSceneContextMenuEvent *);
    void dragEnterEvent(QGraphicsSceneDragDropEvent *);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent *);
    void dragMoveEvent(QGraphicsSceneDragDropEvent *);
    void dropEvent(QGraphicsSceneDragDropEvent *);
    void focusInEvent(QFocusEvent *);
    void focusOutEvent(QFocusEvent *);
    void hoverEnterEvent(QGraphicsSceneHoverEvent *);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent *);
    void hoverMoveEvent(QGraphicsSceneHoverEvent *);
    void inputMethodEvent(QInputMethodEvent *);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    void keyPressEvent(QKeyEvent *);
    void keyReleaseEvent(QKeyEvent *);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent *);
    void mouseMoveEvent(QGraphicsSceneMouseEvent *);
    void mousePressEvent(QGraphicsSceneMouseEvent *);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent *);
    bool sceneEvent(QEvent *);
    bool sceneEventFilter(QGraphicsItem *,QEvent *);
    void wheelEvent(QGraphicsSceneWheelEvent *);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsItem(const sipQGraphicsItem &);
    sipQGraphicsItem &operator = (const sipQGraphicsItem &);

    char sipPyMethods[32];
};

sipQGraphicsItem::sipQGraphicsItem(QGraphicsItem *a0,QGraphicsScene *a1): QGraphicsItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsItem::~sipQGraphicsItem()
{
    sipCommonDtor(sipPySelf);
}

void sipQGraphicsItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_advance);

    if (!meth)
    {
        QGraphicsItem::advance(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t,PyObject *,bool*,int);

    sipVH_QtGui_6(sipGILState,meth,0,a0);
}

QRectF sipQGraphicsItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,sipName_QGraphicsItem,sipName_boundingRect);

    if (!meth)
        return QRectF();

    extern QRectF sipVH_QtGui_196(sip_gilstate_t,PyObject *,bool*);

    return sipVH_QtGui_196(sipGILState,meth,0);
}

QPainterPath sipQGraphicsItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,NULL,sipName_shape);

    if (!meth)
        return QGraphicsItem::shape();

    extern QPainterPath sipVH_QtGui_195(sip_gilstate_t,PyObject *,bool*);

    return sipVH_QtGui_195(sipGILState,meth,0);
}

bool sipQGraphicsItem::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,NULL,sipName_contains);

    if (!meth)
        return QGraphicsItem::contains(a0);

    extern bool sipVH_QtGui_208(sip_gilstate_t,PyObject *,bool*,const QPointF&);

    return sipVH_QtGui_208(sipGILState,meth,0,a0);
}

bool sipQGraphicsItem::collidesWithItem(const QGraphicsItem *a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!meth)
        return QGraphicsItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtGui_211(sip_gilstate_t,PyObject *,bool*,const QGraphicsItem *,Qt::ItemSelectionMode);

    return sipVH_QtGui_211(sipGILState,meth,0,a0,a1);
}

bool sipQGraphicsItem::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!meth)
        return QGraphicsItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtGui_210(sip_gilstate_t,PyObject *,bool*,const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtGui_210(sipGILState,meth,0,a0,a1);
}

bool sipQGraphicsItem::isObscuredBy(const QGraphicsItem *a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!meth)
        return QGraphicsItem::isObscuredBy(a0);

    extern bool sipVH_QtGui_207(sip_gilstate_t,PyObject *,bool*,const QGraphicsItem *);

    return sipVH_QtGui_207(sipGILState,meth,0,a0);
}

QPainterPath sipQGraphicsItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_opaqueArea);

    if (!meth)
        return QGraphicsItem::opaqueArea();

    extern QPainterPath sipVH_QtGui_195(sip_gilstate_t,PyObject *,bool*);

    return sipVH_QtGui_195(sipGILState,meth,0);
}

void sipQGraphicsItem::paint(QPainter *a0,const QStyleOptionGraphicsItem *a1,QWidget *a2)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,sipName_QGraphicsItem,sipName_paint);

    if (!meth)
        return;

    extern void sipVH_QtGui_197(sip_gilstate_t,PyObject *,bool*,QPainter *,const QStyleOptionGraphicsItem *,QWidget *);

    sipVH_QtGui_197(sipGILState,meth,0,a0,a1,a2);
}

int sipQGraphicsItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,NULL,sipName_type);

    if (!meth)
        return QGraphicsItem::type();

    typedef int (*sipVH_QtCore_7)(sip_gilstate_t,PyObject *,bool*);

    return ((sipVH_QtCore_7)(sipModuleAPI_QtGui_QtCore->em_virthandlers[7]))(sipGILState,meth,0);
}

void sipQGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!meth)
    {
        QGraphicsItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_204(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneContextMenuEvent *);

    sipVH_QtGui_204(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!meth)
    {
        QGraphicsItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!meth)
    {
        QGraphicsItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!meth)
    {
        QGraphicsItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_dropEvent);

    if (!meth)
    {
        QGraphicsItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::focusInEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusInEvent);

    if (!meth)
    {
        QGraphicsItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,bool*,QFocusEvent *);

    sipVH_QtGui_25(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::focusOutEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusOutEvent);

    if (!meth)
    {
        QGraphicsItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,bool*,QFocusEvent *);

    sipVH_QtGui_25(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!meth)
    {
        QGraphicsItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!meth)
    {
        QGraphicsItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!meth)
    {
        QGraphicsItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::inputMethodEvent(QInputMethodEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!meth)
    {
        QGraphicsItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_14(sip_gilstate_t,PyObject *,bool*,QInputMethodEvent *);

    sipVH_QtGui_14(sipGILState,meth,0,a0);
}

QVariant sipQGraphicsItem::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[21]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!meth)
        return QGraphicsItem::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_13(sip_gilstate_t,PyObject *,bool*,Qt::InputMethodQuery);

    return sipVH_QtGui_13(sipGILState,meth,0,a0);
}

QVariant sipQGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_itemChange);

    if (!meth)
        return QGraphicsItem::itemChange(a0,a1);

    extern QVariant sipVH_QtGui_192(sip_gilstate_t,PyObject *,bool*,QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtGui_192(sipGILState,meth,0,a0,a1);
}

void sipQGraphicsItem::keyPressEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_keyPressEvent);

    if (!meth)
    {
        QGraphicsItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,bool*,QKeyEvent *);

    sipVH_QtGui_26(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::keyReleaseEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!meth)
    {
        QGraphicsItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,bool*,QKeyEvent *);

    sipVH_QtGui_26(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!meth)
    {
        QGraphicsItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!meth)
    {
        QGraphicsItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_mousePressEvent);

    if (!meth)
    {
        QGraphicsItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!meth)
    {
        QGraphicsItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

bool sipQGraphicsItem::sceneEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_sceneEvent);

    if (!meth)
        return QGraphicsItem::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_12)(sip_gilstate_t,PyObject *,bool*,QEvent *);

    return ((sipVH_QtCore_12)(sipModuleAPI_QtGui_QtCore->em_virthandlers[12]))(sipGILState,meth,0,a0);
}

bool sipQGraphicsItem::sceneEventFilter(QGraphicsItem *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!meth)
        return QGraphicsItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtGui_209(sip_gilstate_t,PyObject *,bool*,QGraphicsItem *,QEvent *);

    return sipVH_QtGui_209(sipGILState,meth,0,a0,a1);
}

void sipQGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_wheelEvent);

    if (!meth)
    {
        QGraphicsItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneWheelEvent *);

    sipVH_QtGui_200(sipGILState,meth,0,a0);
}

void sipQGraphicsItem::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QGraphicsSceneContextMenuEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_dropEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dropEvent(a0) : dropEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusInEvent(a0) : focusInEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_hoverEnterEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverEnterEvent(a0) : hoverEnterEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_hoverLeaveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverLeaveEvent(a0) : hoverLeaveEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_hoverMoveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverMoveEvent(a0) : hoverMoveEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::inputMethodEvent(a0) : inputMethodEvent(a0));
}

QVariant sipQGraphicsItem::sipProtectVirt_inputMethodQuery(bool sipSelfWasArg,Qt::InputMethodQuery a0) const
{
    return (sipSelfWasArg ? QGraphicsItem::inputMethodQuery(a0) : inputMethodQuery(a0));
}

QVariant sipQGraphicsItem::sipProtectVirt_itemChange(bool sipSelfWasArg,QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    return (sipSelfWasArg ? QGraphicsItem::itemChange(a0,a1) : itemChange(a0,a1));
}

void sipQGraphicsItem::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQGraphicsItem::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQGraphicsItem::sipProtect_prepareGeometryChange()
{
    QGraphicsItem::prepareGeometryChange();
}

bool sipQGraphicsItem::sipProtectVirt_sceneEvent(bool sipSelfWasArg,QEvent *a0)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEvent(a0) : sceneEvent(a0));
}

bool sipQGraphicsItem::sipProtectVirt_sceneEventFilter(bool sipSelfWasArg,QGraphicsItem *a0,QEvent *a1)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEventFilter(a0,a1) : sceneEventFilter(a0,a1));
}

void sipQGraphicsItem::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QGraphicsSceneWheelEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::wheelEvent(a0) : wheelEvent(a0));
}


extern "C" {static PyObject *meth_QGraphicsItem_scene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scene(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsScene *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->scene();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsScene,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_scene);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_parentItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->parentItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_parentItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_topLevelItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_topLevelItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->topLevelItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_topLevelItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setParentItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setParentItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem * a0;
        sipWrapper *sipOwner = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJH",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,&sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setParentItem(a0);
            Py_END_ALLOW_THREADS

            if (sipOwner)
                sipTransferTo(sipSelf, (PyObject *)sipOwner);
            else
                sipTransferBack(sipSelf);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setParentItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_children(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_children(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->children());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_children);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_group(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_group(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsItemGroup *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->group();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItemGroup,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_group);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setGroup(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setGroup(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItemGroup * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItemGroup,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setGroup(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setGroup);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_flags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_flags(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsItem::GraphicsItemFlags *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QGraphicsItem::GraphicsItemFlags(sipCpp->flags());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QGraphicsItem_GraphicsItemFlags,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_flags);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setFlag(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFlag(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem::GraphicsItemFlag a0;
        bool a1 = 1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BE|b",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem_GraphicsItemFlag,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFlag(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setFlag);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem::GraphicsItemFlags * a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ1",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem_GraphicsItemFlags,&a0,&a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFlags(*a0);
            Py_END_ALLOW_THREADS

            sipReleaseType(a0,sipType_QGraphicsItem_GraphicsItemFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setFlags);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_toolTip(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_toolTip(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QString *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->toolTip());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_toolTip);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setToolTip(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setToolTip(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QString * a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ1",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QString,&a0,&a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setToolTip(*a0);
            Py_END_ALLOW_THREADS

            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setToolTip);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_cursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_cursor(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QCursor *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QCursor(sipCpp->cursor());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QCursor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_cursor);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QCursor * a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ1",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QCursor,&a0,&a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCursor(*a0);
            Py_END_ALLOW_THREADS

            sipReleaseType(const_cast<QCursor *>(a0),sipType_QCursor,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setCursor);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_hasCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hasCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->hasCursor();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_hasCursor);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_unsetCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_unsetCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->unsetCursor();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_unsetCursor);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isVisible(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isVisible();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isVisible);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setVisible(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bb",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setVisible(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setVisible);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_hide(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hide(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->hide();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_hide);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_show(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_show(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->show();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_show);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isEnabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isEnabled);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bb",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setEnabled(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setEnabled);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isSelected(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isSelected(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isSelected();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isSelected);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setSelected(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setSelected(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bb",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSelected(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setSelected);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_acceptDrops(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptDrops(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->acceptDrops();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_acceptDrops);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setAcceptDrops(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptDrops(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bb",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptDrops(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setAcceptDrops);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_acceptedMouseButtons(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptedMouseButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Qt::MouseButtons *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Qt::MouseButtons(sipCpp->acceptedMouseButtons());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Qt_MouseButtons,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_acceptedMouseButtons);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setAcceptedMouseButtons(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptedMouseButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        Qt::MouseButtons * a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ1",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_Qt_MouseButtons,&a0,&a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptedMouseButtons(*a0);
            Py_END_ALLOW_THREADS

            sipReleaseType(a0,sipType_Qt_MouseButtons,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setAcceptedMouseButtons);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_acceptsHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptsHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->acceptsHoverEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_acceptsHoverEvents);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setAcceptsHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptsHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bb",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptsHoverEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setAcceptsHoverEvents);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_handlesChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_handlesChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->handlesChildEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_handlesChildEvents);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setHandlesChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setHandlesChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bb",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setHandlesChildEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setHandlesChildEvents);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_hasFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hasFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->hasFocus();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_hasFocus);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        Qt::FocusReason a0 = Qt::OtherFocusReason;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B|E",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_Qt_FocusReason,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFocus(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setFocus);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_clearFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_clearFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->clearFocus();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_clearFocus);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_pos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_pos(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->pos());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_pos);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_x(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_x(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->x();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_x);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_y(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_y(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->y();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_y);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_scenePos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scenePos(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->scenePos());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_scenePos);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setPos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setPos(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QPointF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPointF,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPos(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPos(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setPos);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_moveBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_moveBy(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->moveBy(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_moveBy);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_ensureVisible(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ensureVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QRectF& a0def = QRectF();
        const QRectF * a0 = &a0def;
        int a1 = 50;
        int a2 = 50;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B|J9ii",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0,&a1,&a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ensureVisible(*a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        int a4 = 50;
        int a5 = 50;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd|ii",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3,&a4,&a5))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ensureVisible(a0,a1,a2,a3,a4,a5);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_ensureVisible);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_matrix(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_matrix(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QMatrix *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QMatrix(sipCpp->matrix());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QMatrix,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_matrix);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_sceneMatrix(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QMatrix *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QMatrix(sipCpp->sceneMatrix());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QMatrix,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_sceneMatrix);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setMatrix(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QMatrix * a0;
        bool a1 = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9|b",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QMatrix,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMatrix(*a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setMatrix);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_resetMatrix(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_resetMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->resetMatrix();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_resetMatrix);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_rotate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_rotate(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->rotate(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_rotate);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_scale(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scale(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->scale(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_scale);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_shear(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_shear(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->shear(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_shear);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_translate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_translate(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->translate(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_translate);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_advance(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_advance(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bi",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::advance(a0) : sipCpp->advance(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_advance);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_zValue(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_zValue(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->zValue();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_zValue);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setZValue(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setZValue(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setZValue(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setZValue);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    PyObject *sipOrigSelf = sipSelf;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QRectF *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsItem, sipName_boundingRect);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->boundingRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_boundingRect);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_childrenBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_childrenBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->childrenBoundingRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_childrenBoundingRect);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_sceneBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->sceneBoundingRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_sceneBoundingRect);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsItem::shape() : sipCpp->shape()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_shape);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPointF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPointF,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::contains(*a0) : sipCpp->contains(*a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_contains);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_collidesWithItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidesWithItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem * a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8|E",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_Qt_ItemSelectionMode,&a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::collidesWithItem(a0,a1) : sipCpp->collidesWithItem(a0,a1));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_collidesWithItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_collidesWithPath(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidesWithPath(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPainterPath * a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9|E",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPainterPath,&a0,sipType_Qt_ItemSelectionMode,&a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::collidesWithPath(*a0,a1) : sipCpp->collidesWithPath(*a0,a1));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_collidesWithPath);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_collidingItems(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidingItems(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        Qt::ItemSelectionMode a0 = Qt::IntersectsItemShape;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B|E",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_Qt_ItemSelectionMode,&a0))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->collidingItems(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_collidingItems);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isObscured(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isObscured(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isObscured();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isObscured(*a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isObscured(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isObscured);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isObscuredBy);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsItem::opaqueArea() : sipCpp->opaqueArea()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_opaqueArea);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_paint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_paint(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    PyObject *sipOrigSelf = sipSelf;

    {
        QPainter * a0;
        const QStyleOptionGraphicsItem * a1;
        QWidget * a2 = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J8|J8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPainter,&a0,sipType_QStyleOptionGraphicsItem,&a1,sipType_QWidget,&a2))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsItem, sipName_paint);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipCpp->paint(a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_paint);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_update(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_update(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QRectF& a0def = QRectF();
        const QRectF * a0 = &a0def;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B|J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->update(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->update(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_update);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapToItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        const QPointF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QPointF,&a1))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        const QRectF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QRectF,&a1))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        const QPolygonF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QPolygonF,&a1))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        const QPainterPath * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QPainterPath,&a1))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        qreal a1;
        qreal a2;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8dd",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,&a1,&a2))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToItem(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8dddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,&a1,&a2,&a3,&a4))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapToItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapToParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToParent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QPointF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPointF,&a0))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPolygonF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPainterPath,&a0))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToParent(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapToParent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapToScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToScene(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QPointF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPointF,&a0))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPolygonF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPainterPath,&a0))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToScene(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapToScene);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapFromItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        const QPointF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QPointF,&a1))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        const QRectF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QRectF,&a1))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        const QPolygonF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QPolygonF,&a1))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        const QPainterPath * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QPainterPath,&a1))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        qreal a1;
        qreal a2;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8dd",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,&a1,&a2))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromItem(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8dddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,&a1,&a2,&a3,&a4))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapFromItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapFromParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromParent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QPointF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPointF,&a0))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPolygonF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPainterPath,&a0))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromParent(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapFromParent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapFromScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromScene(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QPointF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPointF,&a0))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPolygonF,&a0))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QPainterPath,&a0))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1))
        {
            QPointF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromScene(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QPolygonF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapFromScene);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isAncestorOf(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isAncestorOf(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isAncestorOf(a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isAncestorOf);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_data(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_data(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        int a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bi",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->data(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_data);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setData(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setData(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        int a0;
        const QVariant * a1;
        int a1State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BiJ1",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,sipType_QVariant,&a1,&a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setData(a0,*a1);
            Py_END_ALLOW_THREADS

            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setData);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::type() : sipCpp->type());
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_type);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_installSceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_installSceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->installSceneEventFilter(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_installSceneEventFilter);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_removeSceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_removeSceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->removeSceneEventFilter(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_removeSceneEventFilter);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneContextMenuEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_contextMenuEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_dragEnterEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_dragLeaveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_dragMoveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_dropEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QFocusEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_focusInEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QFocusEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_focusOutEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_hoverEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneHoverEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverEnterEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_hoverEnterEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneHoverEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverLeaveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_hoverLeaveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneHoverEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_hoverMoveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QInputMethodEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_inputMethodEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pE",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_Qt_InputMethodQuery,&a0))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->sipProtectVirt_inputMethodQuery(sipSelfWasArg,a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_inputMethodQuery);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant * a1;
        int a1State = 0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pEJ1",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem_GraphicsItemChange,&a0,sipType_QVariant,&a1,&a1State))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->sipProtectVirt_itemChange(sipSelfWasArg,a0,*a1));
            Py_END_ALLOW_THREADS

            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_itemChange);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QKeyEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_keyPressEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QKeyEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_keyReleaseEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mouseDoubleClickEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mouseMoveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mousePressEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mouseReleaseEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_prepareGeometryChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"p",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_prepareGeometryChange();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_prepareGeometryChange);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_sceneEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QEvent,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_sceneEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_sceneEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_sceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem * a0;
        QEvent * a1;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8J8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QEvent,&a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_sceneEventFilter(sipSelfWasArg,a0,a1);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_sceneEventFilter);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent * a0;
        sipQGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsSceneWheelEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_wheelEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_transform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_transform(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QTransform *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->transform());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_transform);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_sceneTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QTransform *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->sceneTransform());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_sceneTransform);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_deviceTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_deviceTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QTransform * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QTransform,&a0))
        {
            QTransform *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->deviceTransform(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_deviceTransform);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QTransform * a0;
        bool a1 = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9|b",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QTransform,&a0,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setTransform(*a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setTransform);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_resetTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_resetTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->resetTransform();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_resetTransform);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_parentWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->parentWidget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_parentWidget);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_topLevelWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_topLevelWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->topLevelWidget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_topLevelWidget);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_window(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_window(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->window();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_window);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_childItems(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_childItems(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->childItems());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_childItems);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isWidget();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isWidget);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isWindow();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isWindow);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_cacheMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_cacheMode(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QGraphicsItem::CacheMode sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->cacheMode();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QGraphicsItem_CacheMode);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_cacheMode);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setCacheMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setCacheMode(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem::CacheMode a0;
        const QSize& a1def = QSize();
        const QSize * a1 = &a1def;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BE|J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem_CacheMode,&a0,sipType_QSize,&a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCacheMode(a0,*a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setCacheMode);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isVisibleTo(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isVisibleTo(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isVisibleTo(a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isVisibleTo);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_acceptHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->acceptHoverEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_acceptHoverEvents);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setAcceptHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bb",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptHoverEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setAcceptHoverEvents);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_grabMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_grabMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->grabMouse();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_grabMouse);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_ungrabMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ungrabMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ungrabMouse();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_ungrabMouse);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_grabKeyboard(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_grabKeyboard(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->grabKeyboard();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_grabKeyboard);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_ungrabKeyboard(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ungrabKeyboard(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ungrabKeyboard();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_ungrabKeyboard);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_boundingRegion(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRegion(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QTransform * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QTransform,&a0))
        {
            QRegion *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRegion(sipCpp->boundingRegion(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRegion,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_boundingRegion);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_boundingRegionGranularity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRegionGranularity(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->boundingRegionGranularity();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_boundingRegionGranularity);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setBoundingRegionGranularity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setBoundingRegionGranularity(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setBoundingRegionGranularity(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setBoundingRegionGranularity);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_scroll(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scroll(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        qreal a1;
        const QRectF& a2def = QRectF();
        const QRectF * a2 = &a2def;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdd|J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,sipType_QRectF,&a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->scroll(a0,a1,*a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_scroll);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_commonAncestorItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_commonAncestorItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->commonAncestorItem(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_commonAncestorItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isUnderMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isUnderMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isUnderMouse();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isUnderMouse);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_opacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_opacity(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->opacity();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_opacity);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_effectiveOpacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_effectiveOpacity(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->effectiveOpacity();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_effectiveOpacity);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_setOpacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setOpacity(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setOpacity(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_setOpacity);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_itemTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_itemTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        bool a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            QTransform *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->itemTransform(a0,&a1));
            Py_END_ALLOW_THREADS

            PyObject *sipResObj = sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
            return sipBuildResult(0,"(Rb)",sipResObj,a1);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_itemTransform);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_isClipped(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isClipped(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isClipped();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_isClipped);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_clipPath(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_clipPath(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QGraphicsItem,&sipCpp))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->clipPath());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_clipPath);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapRectToItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        const QRectF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QRectF,&a1))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8dddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,&a1,&a2,&a3,&a4))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapRectToItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapRectToParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToParent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapRectToParent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapRectToScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToScene(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapRectToScene);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromItem(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QGraphicsItem * a0;
        const QRectF * a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8J9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QRectF,&a1))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        const QGraphicsItem * a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8dddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QGraphicsItem,&a0,&a1,&a2,&a3,&a4))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapRectFromItem);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromParent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapRectFromParent);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromScene(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QRectF * a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ9",&sipSelf,sipType_QGraphicsItem,&sipCpp,sipType_QRectF,&a0))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"Bdddd",&sipSelf,sipType_QGraphicsItem,&sipCpp,&a0,&a1,&a2,&a3))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QGraphicsItem,sipName_mapRectFromScene);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsItem(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_QGraphicsItem)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsItem(void *, int);}
static void release_QGraphicsItem(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsItem *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsItem *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsItem *>(sipSelf->u.cppPtr)->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsItem(sipSelf->u.cppPtr,sipSelf->flags);
    }
}


extern "C" {static void *init_QGraphicsItem(sipSimpleWrapper *, PyObject *, PyObject **, int *);}
static void *init_QGraphicsItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject **sipOwner, int *sipArgsParsed)
{
    sipQGraphicsItem *sipCpp = 0;

    if (!sipCpp)
    {
        QGraphicsItem * a0 = 0;
        QGraphicsScene * a1 = 0;

        if (sipParseArgs(sipArgsParsed,sipArgs,"|JHJH",sipType_QGraphicsItem,&a0,sipOwner,sipType_QGraphicsScene,&a1,sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsItem(a0,a1);
            Py_END_ALLOW_THREADS
        }
    }

    if (sipCpp)
        sipCpp->sipPySelf = sipSelf;

    return sipCpp;
}


static PyMethodDef methods_QGraphicsItem[] = {
    {SIP_MLNAME_CAST(sipName_acceptDrops), meth_QGraphicsItem_acceptDrops, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_acceptHoverEvents), meth_QGraphicsItem_acceptHoverEvents, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_acceptedMouseButtons), meth_QGraphicsItem_acceptedMouseButtons, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_acceptsHoverEvents), meth_QGraphicsItem_acceptsHoverEvents, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_advance), meth_QGraphicsItem_advance, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsItem_boundingRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_boundingRegion), meth_QGraphicsItem_boundingRegion, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_boundingRegionGranularity), meth_QGraphicsItem_boundingRegionGranularity, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_cacheMode), meth_QGraphicsItem_cacheMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_childItems), meth_QGraphicsItem_childItems, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_children), meth_QGraphicsItem_children, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_childrenBoundingRect), meth_QGraphicsItem_childrenBoundingRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_clearFocus), meth_QGraphicsItem_clearFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_clipPath), meth_QGraphicsItem_clipPath, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_collidesWithItem), meth_QGraphicsItem_collidesWithItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_collidesWithPath), meth_QGraphicsItem_collidesWithPath, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_collidingItems), meth_QGraphicsItem_collidingItems, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_commonAncestorItem), meth_QGraphicsItem_commonAncestorItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_contains), meth_QGraphicsItem_contains, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QGraphicsItem_contextMenuEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_cursor), meth_QGraphicsItem_cursor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_data), meth_QGraphicsItem_data, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_deviceTransform), meth_QGraphicsItem_deviceTransform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QGraphicsItem_dragEnterEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QGraphicsItem_dragLeaveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QGraphicsItem_dragMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QGraphicsItem_dropEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_effectiveOpacity), meth_QGraphicsItem_effectiveOpacity, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_ensureVisible), meth_QGraphicsItem_ensureVisible, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_flags), meth_QGraphicsItem_flags, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QGraphicsItem_focusInEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QGraphicsItem_focusOutEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_grabKeyboard), meth_QGraphicsItem_grabKeyboard, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_grabMouse), meth_QGraphicsItem_grabMouse, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_group), meth_QGraphicsItem_group, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_handlesChildEvents), meth_QGraphicsItem_handlesChildEvents, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hasCursor), meth_QGraphicsItem_hasCursor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hasFocus), meth_QGraphicsItem_hasFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hide), meth_QGraphicsItem_hide, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), meth_QGraphicsItem_hoverEnterEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), meth_QGraphicsItem_hoverLeaveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), meth_QGraphicsItem_hoverMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), meth_QGraphicsItem_inputMethodEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), meth_QGraphicsItem_inputMethodQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_installSceneEventFilter), meth_QGraphicsItem_installSceneEventFilter, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isAncestorOf), meth_QGraphicsItem_isAncestorOf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isClipped), meth_QGraphicsItem_isClipped, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isEnabled), meth_QGraphicsItem_isEnabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isObscured), meth_QGraphicsItem_isObscured, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QGraphicsItem_isObscuredBy, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isSelected), meth_QGraphicsItem_isSelected, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isUnderMouse), meth_QGraphicsItem_isUnderMouse, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isVisible), meth_QGraphicsItem_isVisible, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isVisibleTo), meth_QGraphicsItem_isVisibleTo, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isWidget), meth_QGraphicsItem_isWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isWindow), meth_QGraphicsItem_isWindow, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_itemChange), meth_QGraphicsItem_itemChange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_itemTransform), meth_QGraphicsItem_itemTransform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QGraphicsItem_keyPressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QGraphicsItem_keyReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapFromItem), meth_QGraphicsItem_mapFromItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapFromParent), meth_QGraphicsItem_mapFromParent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapFromScene), meth_QGraphicsItem_mapFromScene, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapRectFromItem), meth_QGraphicsItem_mapRectFromItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapRectFromParent), meth_QGraphicsItem_mapRectFromParent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapRectFromScene), meth_QGraphicsItem_mapRectFromScene, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapRectToItem), meth_QGraphicsItem_mapRectToItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapRectToParent), meth_QGraphicsItem_mapRectToParent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapRectToScene), meth_QGraphicsItem_mapRectToScene, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapToItem), meth_QGraphicsItem_mapToItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapToParent), meth_QGraphicsItem_mapToParent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mapToScene), meth_QGraphicsItem_mapToScene, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_matrix), meth_QGraphicsItem_matrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QGraphicsItem_mouseDoubleClickEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QGraphicsItem_mouseMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QGraphicsItem_mousePressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QGraphicsItem_mouseReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_moveBy), meth_QGraphicsItem_moveBy, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_opacity), meth_QGraphicsItem_opacity, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QGraphicsItem_opaqueArea, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_paint), meth_QGraphicsItem_paint, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_parentItem), meth_QGraphicsItem_parentItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_parentWidget), meth_QGraphicsItem_parentWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_pos), meth_QGraphicsItem_pos, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), meth_QGraphicsItem_prepareGeometryChange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_removeSceneEventFilter), meth_QGraphicsItem_removeSceneEventFilter, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_resetMatrix), meth_QGraphicsItem_resetMatrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_resetTransform), meth_QGraphicsItem_resetTransform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rotate), meth_QGraphicsItem_rotate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_scale), meth_QGraphicsItem_scale, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_scene), meth_QGraphicsItem_scene, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneBoundingRect), meth_QGraphicsItem_sceneBoundingRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEvent), meth_QGraphicsItem_sceneEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), meth_QGraphicsItem_sceneEventFilter, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneMatrix), meth_QGraphicsItem_sceneMatrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_scenePos), meth_QGraphicsItem_scenePos, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneTransform), meth_QGraphicsItem_sceneTransform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_scroll), meth_QGraphicsItem_scroll, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setAcceptDrops), meth_QGraphicsItem_setAcceptDrops, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setAcceptHoverEvents), meth_QGraphicsItem_setAcceptHoverEvents, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setAcceptedMouseButtons), meth_QGraphicsItem_setAcceptedMouseButtons, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setAcceptsHoverEvents), meth_QGraphicsItem_setAcceptsHoverEvents, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setBoundingRegionGranularity), meth_QGraphicsItem_setBoundingRegionGranularity, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setCacheMode), meth_QGraphicsItem_setCacheMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setCursor), meth_QGraphicsItem_setCursor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setData), meth_QGraphicsItem_setData, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setEnabled), meth_QGraphicsItem_setEnabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setFlag), meth_QGraphicsItem_setFlag, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setFlags), meth_QGraphicsItem_setFlags, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setFocus), meth_QGraphicsItem_setFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setGroup), meth_QGraphicsItem_setGroup, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setHandlesChildEvents), meth_QGraphicsItem_setHandlesChildEvents, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setMatrix), meth_QGraphicsItem_setMatrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setOpacity), meth_QGraphicsItem_setOpacity, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setParentItem), meth_QGraphicsItem_setParentItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setPos), meth_QGraphicsItem_setPos, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setSelected), meth_QGraphicsItem_setSelected, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setToolTip), meth_QGraphicsItem_setToolTip, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setTransform), meth_QGraphicsItem_setTransform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setVisible), meth_QGraphicsItem_setVisible, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setZValue), meth_QGraphicsItem_setZValue, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_shape), meth_QGraphicsItem_shape, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_shear), meth_QGraphicsItem_shear, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_show), meth_QGraphicsItem_show, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_toolTip), meth_QGraphicsItem_toolTip, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_topLevelItem), meth_QGraphicsItem_topLevelItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_topLevelWidget), meth_QGraphicsItem_topLevelWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_transform), meth_QGraphicsItem_transform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_translate), meth_QGraphicsItem_translate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsItem_type, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_ungrabKeyboard), meth_QGraphicsItem_ungrabKeyboard, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_ungrabMouse), meth_QGraphicsItem_ungrabMouse, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_unsetCursor), meth_QGraphicsItem_unsetCursor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_update), meth_QGraphicsItem_update, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QGraphicsItem_wheelEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_window), meth_QGraphicsItem_window, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_x), meth_QGraphicsItem_x, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_y), meth_QGraphicsItem_y, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_zValue), meth_QGraphicsItem_zValue, METH_VARARGS, NULL}
};

static sipEnumMemberDef enummembers_QGraphicsItem[] = {
    {sipName_DeviceCoordinateCache, QGraphicsItem::DeviceCoordinateCache, 150},
    {sipName_ItemChildAddedChange, QGraphicsItem::ItemChildAddedChange, 151},
    {sipName_ItemChildRemovedChange, QGraphicsItem::ItemChildRemovedChange, 151},
    {sipName_ItemClipsChildrenToShape, QGraphicsItem::ItemClipsChildrenToShape, 152},
    {sipName_ItemClipsToShape, QGraphicsItem::ItemClipsToShape, 152},
    {sipName_ItemCoordinateCache, QGraphicsItem::ItemCoordinateCache, 150},
    {sipName_ItemCursorChange, QGraphicsItem::ItemCursorChange, 151},
    {sipName_ItemCursorHasChanged, QGraphicsItem::ItemCursorHasChanged, 151},
    {sipName_ItemDoesntPropagateOpacityToChildren, QGraphicsItem::ItemDoesntPropagateOpacityToChildren, 152},
    {sipName_ItemEnabledChange, QGraphicsItem::ItemEnabledChange, 151},
    {sipName_ItemEnabledHasChanged, QGraphicsItem::ItemEnabledHasChanged, 151},
    {sipName_ItemFlagsChange, QGraphicsItem::ItemFlagsChange, 151},
    {sipName_ItemFlagsHaveChanged, QGraphicsItem::ItemFlagsHaveChanged, 151},
    {sipName_ItemIgnoresParentOpacity, QGraphicsItem::ItemIgnoresParentOpacity, 152},
    {sipName_ItemIgnoresTransformations, QGraphicsItem::ItemIgnoresTransformations, 152},
    {sipName_ItemIsFocusable, QGraphicsItem::ItemIsFocusable, 152},
    {sipName_ItemIsMovable, QGraphicsItem::ItemIsMovable, 152},
    {sipName_ItemIsSelectable, QGraphicsItem::ItemIsSelectable, 152},
    {sipName_ItemMatrixChange, QGraphicsItem::ItemMatrixChange, 151},
    {sipName_ItemOpacityChange, QGraphicsItem::ItemOpacityChange, 151},
    {sipName_ItemOpacityHasChanged, QGraphicsItem::ItemOpacityHasChanged, 151},
    {sipName_ItemParentChange, QGraphicsItem::ItemParentChange, 151},
    {sipName_ItemParentHasChanged, QGraphicsItem::ItemParentHasChanged, 151},
    {sipName_ItemPositionChange, QGraphicsItem::ItemPositionChange, 151},
    {sipName_ItemPositionHasChanged, QGraphicsItem::ItemPositionHasChanged, 151},
    {sipName_ItemSceneChange, QGraphicsItem::ItemSceneChange, 151},
    {sipName_ItemSceneHasChanged, QGraphicsItem::ItemSceneHasChanged, 151},
    {sipName_ItemSelectedChange, QGraphicsItem::ItemSelectedChange, 151},
    {sipName_ItemSelectedHasChanged, QGraphicsItem::ItemSelectedHasChanged, 151},
    {sipName_ItemStacksBehindParent, QGraphicsItem::ItemStacksBehindParent, 152},
    {sipName_ItemToolTipChange, QGraphicsItem::ItemToolTipChange, 151},
    {sipName_ItemToolTipHasChanged, QGraphicsItem::ItemToolTipHasChanged, 151},
    {sipName_ItemTransformChange, QGraphicsItem::ItemTransformChange, 151},
    {sipName_ItemTransformHasChanged, QGraphicsItem::ItemTransformHasChanged, 151},
    {sipName_ItemVisibleChange, QGraphicsItem::ItemVisibleChange, 151},
    {sipName_ItemVisibleHasChanged, QGraphicsItem::ItemVisibleHasChanged, 151},
    {sipName_ItemZValueChange, QGraphicsItem::ItemZValueChange, 151},
    {sipName_ItemZValueHasChanged, QGraphicsItem::ItemZValueHasChanged, 151},
    {sipName_NoCache, QGraphicsItem::NoCache, 150},
    {sipName_UserType, QGraphicsItem::UserType, -1},
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QGraphicsItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsItem,
        {0}
    },
    {
        sipNameNr_QGraphicsItem,
        {0, 0, 1},
        139, methods_QGraphicsItem,
        40, enummembers_QGraphicsItem,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    -1,
    0,
    0,
    init_QGraphicsItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsItem,
    0,
    0,
    0,
    release_QGraphicsItem,
    cast_QGraphicsItem,
    0,
    0,
    0
},
    0,
    0,
    0
};
