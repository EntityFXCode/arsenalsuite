/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.9.1 on Wed Feb 17 09:47:24 2010
 *
 * Copyright (c) 2009 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 529 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 39 "sipQtGuiQAbstractGraphicsShapeItem.cpp"

#line 45 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 43 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 45 "sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 46 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 57 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 51 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qbrush.sip"
#include <qbrush.h>
#line 54 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qpen.sip"
#include <qpen.h>
#line 57 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 160 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 60 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 45 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 63 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 66 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 69 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 125 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 72 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 39 "sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 75 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 139 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 78 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 37 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 81 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 112 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 84 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 291 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 87 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 90 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 40 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 93 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 461 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 477 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 98 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 190 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 101 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 320 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 104 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 237 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 107 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 163 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 110 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 94 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 113 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 116 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 119 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 1597 "sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 122 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 125 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 128 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 40 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 131 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 134 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 41 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 137 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 45 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 140 "sipQtGuiQAbstractGraphicsShapeItem.cpp"
#line 859 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 143 "sipQtGuiQAbstractGraphicsShapeItem.cpp"


class sipQAbstractGraphicsShapeItem : public QAbstractGraphicsShapeItem
{
public:
    sipQAbstractGraphicsShapeItem(QGraphicsItem *,QGraphicsScene *);
    virtual ~sipQAbstractGraphicsShapeItem();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtectVirt_contextMenuEvent(bool,QGraphicsSceneContextMenuEvent *);
    void sipProtectVirt_dragEnterEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragLeaveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragMoveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dropEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_focusInEvent(bool,QFocusEvent *);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent *);
    void sipProtectVirt_hoverEnterEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_hoverLeaveEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_hoverMoveEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent *);
    QVariant sipProtectVirt_inputMethodQuery(bool,Qt::InputMethodQuery) const;
    QVariant sipProtectVirt_itemChange(bool,QGraphicsItem::GraphicsItemChange,const QVariant&);
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent *);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent *);
    void sipProtectVirt_mouseDoubleClickEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseMoveEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mousePressEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseReleaseEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtect_prepareGeometryChange();
    bool sipProtectVirt_sceneEvent(bool,QEvent *);
    bool sipProtectVirt_sceneEventFilter(bool,QGraphicsItem *,QEvent *);
    void sipProtectVirt_wheelEvent(bool,QGraphicsSceneWheelEvent *);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool isObscuredBy(const QGraphicsItem *) const;
    QPainterPath opaqueArea() const;
    void advance(int);
    QRectF boundingRect() const;
    QPainterPath shape() const;
    bool contains(const QPointF&) const;
    bool collidesWithItem(const QGraphicsItem *,Qt::ItemSelectionMode) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    void paint(QPainter *,const QStyleOptionGraphicsItem *,QWidget *);
    int type() const;
    void contextMenuEvent(QGraphicsSceneContextMenuEvent *);
    void dragEnterEvent(QGraphicsSceneDragDropEvent *);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent *);
    void dragMoveEvent(QGraphicsSceneDragDropEvent *);
    void dropEvent(QGraphicsSceneDragDropEvent *);
    void focusInEvent(QFocusEvent *);
    void focusOutEvent(QFocusEvent *);
    void hoverEnterEvent(QGraphicsSceneHoverEvent *);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent *);
    void hoverMoveEvent(QGraphicsSceneHoverEvent *);
    void inputMethodEvent(QInputMethodEvent *);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    void keyPressEvent(QKeyEvent *);
    void keyReleaseEvent(QKeyEvent *);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent *);
    void mouseMoveEvent(QGraphicsSceneMouseEvent *);
    void mousePressEvent(QGraphicsSceneMouseEvent *);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent *);
    bool sceneEvent(QEvent *);
    bool sceneEventFilter(QGraphicsItem *,QEvent *);
    void wheelEvent(QGraphicsSceneWheelEvent *);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQAbstractGraphicsShapeItem(const sipQAbstractGraphicsShapeItem &);
    sipQAbstractGraphicsShapeItem &operator = (const sipQAbstractGraphicsShapeItem &);

    char sipPyMethods[32];
};

sipQAbstractGraphicsShapeItem::sipQAbstractGraphicsShapeItem(QGraphicsItem *a0,QGraphicsScene *a1): QAbstractGraphicsShapeItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQAbstractGraphicsShapeItem::~sipQAbstractGraphicsShapeItem()
{
    sipCommonDtor(sipPySelf);
}

bool sipQAbstractGraphicsShapeItem::isObscuredBy(const QGraphicsItem *a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!meth)
        return QAbstractGraphicsShapeItem::isObscuredBy(a0);

    extern bool sipVH_QtGui_207(sip_gilstate_t,PyObject *,bool*,const QGraphicsItem *);

    return sipVH_QtGui_207(sipGILState,meth,0,a0);
}

QPainterPath sipQAbstractGraphicsShapeItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,NULL,sipName_opaqueArea);

    if (!meth)
        return QAbstractGraphicsShapeItem::opaqueArea();

    extern QPainterPath sipVH_QtGui_195(sip_gilstate_t,PyObject *,bool*);

    return sipVH_QtGui_195(sipGILState,meth,0);
}

void sipQAbstractGraphicsShapeItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_advance);

    if (!meth)
    {
        QGraphicsItem::advance(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t,PyObject *,bool*,int);

    sipVH_QtGui_6(sipGILState,meth,0,a0);
}

QRectF sipQAbstractGraphicsShapeItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,sipName_QAbstractGraphicsShapeItem,sipName_boundingRect);

    if (!meth)
        return QRectF();

    extern QRectF sipVH_QtGui_196(sip_gilstate_t,PyObject *,bool*);

    return sipVH_QtGui_196(sipGILState,meth,0);
}

QPainterPath sipQAbstractGraphicsShapeItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,NULL,sipName_shape);

    if (!meth)
        return QGraphicsItem::shape();

    extern QPainterPath sipVH_QtGui_195(sip_gilstate_t,PyObject *,bool*);

    return sipVH_QtGui_195(sipGILState,meth,0);
}

bool sipQAbstractGraphicsShapeItem::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_contains);

    if (!meth)
        return QGraphicsItem::contains(a0);

    extern bool sipVH_QtGui_208(sip_gilstate_t,PyObject *,bool*,const QPointF&);

    return sipVH_QtGui_208(sipGILState,meth,0,a0);
}

bool sipQAbstractGraphicsShapeItem::collidesWithItem(const QGraphicsItem *a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!meth)
        return QGraphicsItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtGui_211(sip_gilstate_t,PyObject *,bool*,const QGraphicsItem *,Qt::ItemSelectionMode);

    return sipVH_QtGui_211(sipGILState,meth,0,a0,a1);
}

bool sipQAbstractGraphicsShapeItem::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!meth)
        return QGraphicsItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtGui_210(sip_gilstate_t,PyObject *,bool*,const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtGui_210(sipGILState,meth,0,a0,a1);
}

void sipQAbstractGraphicsShapeItem::paint(QPainter *a0,const QStyleOptionGraphicsItem *a1,QWidget *a2)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,sipName_QAbstractGraphicsShapeItem,sipName_paint);

    if (!meth)
        return;

    extern void sipVH_QtGui_197(sip_gilstate_t,PyObject *,bool*,QPainter *,const QStyleOptionGraphicsItem *,QWidget *);

    sipVH_QtGui_197(sipGILState,meth,0,a0,a1,a2);
}

int sipQAbstractGraphicsShapeItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,NULL,sipName_type);

    if (!meth)
        return QGraphicsItem::type();

    typedef int (*sipVH_QtCore_7)(sip_gilstate_t,PyObject *,bool*);

    return ((sipVH_QtCore_7)(sipModuleAPI_QtGui_QtCore->em_virthandlers[7]))(sipGILState,meth,0);
}

void sipQAbstractGraphicsShapeItem::contextMenuEvent(QGraphicsSceneContextMenuEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!meth)
    {
        QGraphicsItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_204(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneContextMenuEvent *);

    sipVH_QtGui_204(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::dragEnterEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!meth)
    {
        QGraphicsItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::dragLeaveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!meth)
    {
        QGraphicsItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::dragMoveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!meth)
    {
        QGraphicsItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::dropEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_dropEvent);

    if (!meth)
    {
        QGraphicsItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_203(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::focusInEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusInEvent);

    if (!meth)
    {
        QGraphicsItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,bool*,QFocusEvent *);

    sipVH_QtGui_25(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::focusOutEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusOutEvent);

    if (!meth)
    {
        QGraphicsItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,bool*,QFocusEvent *);

    sipVH_QtGui_25(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::hoverEnterEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!meth)
    {
        QGraphicsItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::hoverLeaveEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!meth)
    {
        QGraphicsItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::hoverMoveEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!meth)
    {
        QGraphicsItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::inputMethodEvent(QInputMethodEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!meth)
    {
        QGraphicsItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_14(sip_gilstate_t,PyObject *,bool*,QInputMethodEvent *);

    sipVH_QtGui_14(sipGILState,meth,0,a0);
}

QVariant sipQAbstractGraphicsShapeItem::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[21]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!meth)
        return QGraphicsItem::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_13(sip_gilstate_t,PyObject *,bool*,Qt::InputMethodQuery);

    return sipVH_QtGui_13(sipGILState,meth,0,a0);
}

QVariant sipQAbstractGraphicsShapeItem::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_itemChange);

    if (!meth)
        return QGraphicsItem::itemChange(a0,a1);

    extern QVariant sipVH_QtGui_192(sip_gilstate_t,PyObject *,bool*,QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtGui_192(sipGILState,meth,0,a0,a1);
}

void sipQAbstractGraphicsShapeItem::keyPressEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_keyPressEvent);

    if (!meth)
    {
        QGraphicsItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,bool*,QKeyEvent *);

    sipVH_QtGui_26(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::keyReleaseEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!meth)
    {
        QGraphicsItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,bool*,QKeyEvent *);

    sipVH_QtGui_26(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!meth)
    {
        QGraphicsItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::mouseMoveEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!meth)
    {
        QGraphicsItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::mousePressEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_mousePressEvent);

    if (!meth)
    {
        QGraphicsItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::mouseReleaseEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!meth)
    {
        QGraphicsItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_201(sipGILState,meth,0,a0);
}

bool sipQAbstractGraphicsShapeItem::sceneEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_sceneEvent);

    if (!meth)
        return QGraphicsItem::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_12)(sip_gilstate_t,PyObject *,bool*,QEvent *);

    return ((sipVH_QtCore_12)(sipModuleAPI_QtGui_QtCore->em_virthandlers[12]))(sipGILState,meth,0,a0);
}

bool sipQAbstractGraphicsShapeItem::sceneEventFilter(QGraphicsItem *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!meth)
        return QGraphicsItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtGui_209(sip_gilstate_t,PyObject *,bool*,QGraphicsItem *,QEvent *);

    return sipVH_QtGui_209(sipGILState,meth,0,a0,a1);
}

void sipQAbstractGraphicsShapeItem::wheelEvent(QGraphicsSceneWheelEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_wheelEvent);

    if (!meth)
    {
        QGraphicsItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,bool*,QGraphicsSceneWheelEvent *);

    sipVH_QtGui_200(sipGILState,meth,0,a0);
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QGraphicsSceneContextMenuEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_dropEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::dropEvent(a0) : dropEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusInEvent(a0) : focusInEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_hoverEnterEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverEnterEvent(a0) : hoverEnterEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_hoverLeaveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverLeaveEvent(a0) : hoverLeaveEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_hoverMoveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverMoveEvent(a0) : hoverMoveEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::inputMethodEvent(a0) : inputMethodEvent(a0));
}

QVariant sipQAbstractGraphicsShapeItem::sipProtectVirt_inputMethodQuery(bool sipSelfWasArg,Qt::InputMethodQuery a0) const
{
    return (sipSelfWasArg ? QGraphicsItem::inputMethodQuery(a0) : inputMethodQuery(a0));
}

QVariant sipQAbstractGraphicsShapeItem::sipProtectVirt_itemChange(bool sipSelfWasArg,QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    return (sipSelfWasArg ? QGraphicsItem::itemChange(a0,a1) : itemChange(a0,a1));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQAbstractGraphicsShapeItem::sipProtect_prepareGeometryChange()
{
    QGraphicsItem::prepareGeometryChange();
}

bool sipQAbstractGraphicsShapeItem::sipProtectVirt_sceneEvent(bool sipSelfWasArg,QEvent *a0)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEvent(a0) : sceneEvent(a0));
}

bool sipQAbstractGraphicsShapeItem::sipProtectVirt_sceneEventFilter(bool sipSelfWasArg,QGraphicsItem *a0,QEvent *a1)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEventFilter(a0,a1) : sceneEventFilter(a0,a1));
}

void sipQAbstractGraphicsShapeItem::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QGraphicsSceneWheelEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::wheelEvent(a0) : wheelEvent(a0));
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneContextMenuEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_contextMenuEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_dragEnterEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_dragLeaveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_dragMoveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneDragDropEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_dropEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QFocusEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_focusInEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QFocusEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_focusOutEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_hoverEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneHoverEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverEnterEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_hoverEnterEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneHoverEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverLeaveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_hoverLeaveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneHoverEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_hoverMoveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QInputMethodEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_inputMethodEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pE",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_Qt_InputMethodQuery,&a0))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->sipProtectVirt_inputMethodQuery(sipSelfWasArg,a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_inputMethodQuery);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant * a1;
        int a1State = 0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pEJ1",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsItem_GraphicsItemChange,&a0,sipType_QVariant,&a1,&a1State))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->sipProtectVirt_itemChange(sipSelfWasArg,a0,*a1));
            Py_END_ALLOW_THREADS

            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_itemChange);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QKeyEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_keyPressEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QKeyEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_keyReleaseEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_mouseDoubleClickEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_mouseMoveEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_mousePressEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneMouseEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_mouseReleaseEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_prepareGeometryChange(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"p",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_prepareGeometryChange();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_prepareGeometryChange);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_sceneEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QEvent,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_sceneEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_sceneEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_sceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem * a0;
        QEvent * a1;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8J8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsItem,&a0,sipType_QEvent,&a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_sceneEventFilter(sipSelfWasArg,a0,a1);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_sceneEventFilter);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent * a0;
        sipQAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"pJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsSceneWheelEvent,&a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_wheelEvent);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_pen(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_pen(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp))
        {
            QPen *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPen(sipCpp->pen());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPen,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_pen);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_setPen(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_setPen(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QPen * a0;
        int a0State = 0;
        QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ1",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QPen,&a0,&a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPen(*a0);
            Py_END_ALLOW_THREADS

            sipReleaseType(const_cast<QPen *>(a0),sipType_QPen,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_setPen);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_brush(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_brush(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp))
        {
            QBrush *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QBrush(sipCpp->brush());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QBrush,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_brush);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_setBrush(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_setBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;

    {
        const QBrush * a0;
        int a0State = 0;
        QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ1",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QBrush,&a0,&a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setBrush(*a0);
            Py_END_ALLOW_THREADS

            sipReleaseType(const_cast<QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_setBrush);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem * a0;
        QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ8",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp,sipType_QGraphicsItem,&a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QAbstractGraphicsShapeItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_isObscuredBy);

    return NULL;
}


extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    int sipArgsParsed = 0;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipType_QAbstractGraphicsShapeItem,&sipCpp))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QAbstractGraphicsShapeItem::opaqueArea() : sipCpp->opaqueArea()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipName_QAbstractGraphicsShapeItem,sipName_opaqueArea);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QAbstractGraphicsShapeItem(void *, const sipTypeDef *);}
static void *cast_QAbstractGraphicsShapeItem(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QAbstractGraphicsShapeItem)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsItem)->ctd_cast((QGraphicsItem *)(QAbstractGraphicsShapeItem *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QAbstractGraphicsShapeItem(void *, int);}
static void release_QAbstractGraphicsShapeItem(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQAbstractGraphicsShapeItem *>(sipCppV);
    else
        delete reinterpret_cast<QAbstractGraphicsShapeItem *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QAbstractGraphicsShapeItem(sipSimpleWrapper *);}
static void dealloc_QAbstractGraphicsShapeItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQAbstractGraphicsShapeItem *>(sipSelf->u.cppPtr)->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QAbstractGraphicsShapeItem(sipSelf->u.cppPtr,sipSelf->flags);
    }
}


extern "C" {static void *init_QAbstractGraphicsShapeItem(sipSimpleWrapper *, PyObject *, PyObject **, int *);}
static void *init_QAbstractGraphicsShapeItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject **sipOwner, int *sipArgsParsed)
{
    sipQAbstractGraphicsShapeItem *sipCpp = 0;

    if (!sipCpp)
    {
        QGraphicsItem * a0 = 0;
        QGraphicsScene * a1 = 0;

        if (sipParseArgs(sipArgsParsed,sipArgs,"|JHJH",sipType_QGraphicsItem,&a0,sipOwner,sipType_QGraphicsScene,&a1,sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQAbstractGraphicsShapeItem(a0,a1);
            Py_END_ALLOW_THREADS
        }
    }

    if (sipCpp)
        sipCpp->sipPySelf = sipSelf;

    return sipCpp;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QAbstractGraphicsShapeItem[] = {{149, 255, 1}};


static PyMethodDef methods_QAbstractGraphicsShapeItem[] = {
    {SIP_MLNAME_CAST(sipName_brush), meth_QAbstractGraphicsShapeItem_brush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QAbstractGraphicsShapeItem_contextMenuEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QAbstractGraphicsShapeItem_dragEnterEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QAbstractGraphicsShapeItem_dragLeaveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QAbstractGraphicsShapeItem_dragMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QAbstractGraphicsShapeItem_dropEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QAbstractGraphicsShapeItem_focusInEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QAbstractGraphicsShapeItem_focusOutEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), meth_QAbstractGraphicsShapeItem_hoverEnterEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), meth_QAbstractGraphicsShapeItem_hoverLeaveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), meth_QAbstractGraphicsShapeItem_hoverMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), meth_QAbstractGraphicsShapeItem_inputMethodEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), meth_QAbstractGraphicsShapeItem_inputMethodQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QAbstractGraphicsShapeItem_isObscuredBy, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_itemChange), meth_QAbstractGraphicsShapeItem_itemChange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QAbstractGraphicsShapeItem_keyPressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QAbstractGraphicsShapeItem_keyReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QAbstractGraphicsShapeItem_mouseDoubleClickEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QAbstractGraphicsShapeItem_mouseMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QAbstractGraphicsShapeItem_mousePressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QAbstractGraphicsShapeItem_mouseReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QAbstractGraphicsShapeItem_opaqueArea, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_pen), meth_QAbstractGraphicsShapeItem_pen, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), meth_QAbstractGraphicsShapeItem_prepareGeometryChange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEvent), meth_QAbstractGraphicsShapeItem_sceneEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), meth_QAbstractGraphicsShapeItem_sceneEventFilter, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setBrush), meth_QAbstractGraphicsShapeItem_setBrush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setPen), meth_QAbstractGraphicsShapeItem_setPen, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QAbstractGraphicsShapeItem_wheelEvent, METH_VARARGS, NULL}
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QAbstractGraphicsShapeItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QAbstractGraphicsShapeItem,
        {0}
    },
    {
        sipNameNr_QAbstractGraphicsShapeItem,
        {0, 0, 1},
        29, methods_QAbstractGraphicsShapeItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    -1,
    -1,
    supers_QAbstractGraphicsShapeItem,
    0,
    init_QAbstractGraphicsShapeItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QAbstractGraphicsShapeItem,
    0,
    0,
    0,
    release_QAbstractGraphicsShapeItem,
    cast_QAbstractGraphicsShapeItem,
    0,
    0,
    0
},
    0,
    0,
    0
};
